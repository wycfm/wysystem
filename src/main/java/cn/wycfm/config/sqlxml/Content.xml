<?xml version="1.0" encoding="UTF-8"?>
<!--
       Copyright 2009-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Content">

  <resultMap type="cn.wycfm.blog.model.Content" id="ContentResult">
    <id column="content_id" jdbcType="INTEGER" property="contentId"/>
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="description" jdbcType="VARCHAR" property="description"/>
    <result column="txt" jdbcType="VARCHAR" property="txt"/>
    <result column="user_id" jdbcType="INTEGER" property="userId"/>
  </resultMap>

  <select id="queryContentList" parameterType="cn.wycfm.blog.model.Content"  resultMap="ContentResult">
    SELECT c.content_id,ce.title,ce.description,ct.txt FROM content c
    inner join content_ext ce on ce.content_id=c.content_id
    inner join content_txt ct on ct.content_id=c.content_id
    WHERE 1=1
    <if test="title != null and title.trim!=''">
    	and ce.title like '%' #{title} '%'
    </if>
    <if test="userId !=null and userId>0">
    	and c.user_id=#{userId}
    </if>
  </select>

  <!-- <select id="version" parameterType="long" resultType="int">
    SELECT version FROM user WHERE id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="delete" parameterType="UserAlias">
    DELETE FROM user WHERE id = #{id:INTEGER}
  </delete>

  <insert id="insert" parameterType="UserAlias" useGeneratedKeys="false">
    INSERT INTO user
    ( id,
    username,
    password,
    administrator
    )
    VALUES
    ( #{id},
    #{username,jdbcType=VARCHAR},
    #{password.encrypted:VARCHAR},
    #{administrator,jdbcType=BOOLEAN}
    )
  </insert>

  <update id="update" parameterType="UserAlias">
    UPDATE user SET
    username = #{username,jdbcType=VARCHAR},
    password = #{password.encrypted,jdbcType=VARCHAR},
    administrator = #{administrator,jdbcType=BOOLEAN}
    WHERE
    id = #{id,jdbcType=INTEGER}
  </update>

    Unique constraint check
  <select id="isUniqueUsername" parameterType="map" resultType="boolean">
    SELECT (count(*) = 0)
    FROM user
    WHERE ((#{userId,jdbcType=BIGINT} IS NOT NULL AND id != #{userId,jdbcType=BIGINT}) OR #{userId,jdbcType=BIGINT} IS
    NULL)  other than me
    AND (username = #{username,jdbcType=VARCHAR})
  </select> -->
</mapper>